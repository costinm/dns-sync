---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/external-dns/pull/2007
    controller-gen.kubebuilder.io/version: v0.15.0
  name: dnsendpoints.externaldns.k8s.io
spec:
  group: externaldns.k8s.io
  names:
    kind: DNSEndpoint
    listKind: DNSEndpointList
    plural: dnsendpoints
    singular: dnsendpoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DNSEndpointSpec defines the desired state of DNSEndpoint
            properties:
              endpoints:
                items:
                  description: Endpoint is a high-level way of a connection between
                    a service and an IP
                  properties:
                    dnsName:
                      description: The hostname of the DNS record
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels stores labels defined for the Endpoint
                      type: object
                    providerSpecific:
                      description: ProviderSpecific stores provider specific config
                      items:
                        description: ProviderSpecificProperty holds the name and value
                          of a configuration which is specific to individual DNS providers
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    recordTTL:
                      description: TTL for the record
                      format: int64
                      type: integer
                    recordType:
                      description: RecordType type of record, e.g. CNAME, A, AAAA,
                        SRV, TXT etc
                      type: string
                    setIdentifier:
                      description: Identifier to distinguish multiple records with
                        the same name and type (e.g. Route53 records with routing
                        policies other than 'simple')
                      type: string
                    targets:
                      description: The targets the DNS record points to
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
          status:
            description: DNSEndpointStatus defines the observed state of DNSEndpoint
            properties:
              observedGeneration:
                description: The generation observed by the external-dns controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: dnsrecords.dns-resource
spec:
  group: dns-resource
  names:
    kind: DNSRecord
    listKind: DNSRecordList
    plural: dnsrecords
    singular: dnsrecord
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          DNSRecord represents a CR that has host and IP information to program in DNS.
          It 'happens' to match Istio ServiceEntry - but it is intended as a pattern, more fields can be added to match other
          ways to represent the host and address info.


          Labels must be used to opt-in specific 'frontend' resources - it should never be expected that all ServiceEntries
          have frontend role by default.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          dns:
            description: Records using standard syntax.
            items:
              type: string
            type: array
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              addresses:
                description: |-
                  Addresses are the VIPs for the hosts.
                  If empty, this is a 'headless' record, using the endpoint addresses and 'original dst' for TCP or hostname for HTTP
                items:
                  type: string
                type: array
              hosts:
                description: |-
                  Hosts is the list of hostnames associated with the record.
                  Short names will be qualified with the namespace and mesh suffix or .svc.cluster.local
                  Only values that are allowed will be programmed into DNS.
                items:
                  type: string
                type: array
              ports:
                description: Ports can be used to generate SRV records.
                items:
                  properties:
                    name:
                      type: string
                    number:
                      type: integer
                  type: object
                type: array
              subjectAltNames:
                description: SubjectAltNames provides info about the expected SANs
                  - secure DNS (DNS-SEC, DOT, etc) is expected.
                items:
                  type: string
                type: array
            required:
            - addresses
            - hosts
            - ports
            - subjectAltNames
            type: object
          status:
            properties:
              addresses:
                items:
                  properties:
                    host:
                      type: string
                    value:
                      description: Value is the address - IP for Istio.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: |-
                  Resource Generation to which the Reconciled Condition refers.
                  When this value is not equal to the object's metadata generation, reconciled condition  calculation for the current
                  generation is still in progress.  See https://istio.io/latest/docs/reference/config/config-status/ for more info.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: dnssyncs.externaldns.k8s.io
spec:
  group: externaldns.k8s.io
  names:
    kind: DNSServiceProvider
    listKind: DNSServiceProviderList
    plural: dnssyncs
    singular: dnsserviceprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DNSServiceSepc represents an provider using the external-dns
              webhook API.
            properties:
              address:
                description: |-
                  URL to the provider's API endpoint, if not hardcoded by the protocol.
                  This will be the Webhook address for out-of-tree providers.
                type: string
              protocol:
                description: |-
                  Protocol used to communicate with the provider - one of the build
                  in implementations "aws", "azure", "gcp", "rfc2136", "route53",
                  "alidns", "cloudflare", "dnsimple", "dnsmadeeasy", "infoblox",
                  "linode", "namedotcom", "ovh", "rfc2136", "ultradns"...
                type: string
              zones:
                additionalProperties:
                  type: string
                type: object
            required:
            - address
            - protocol
            - zones
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
